Để xóa tất cả các thư viện Python bạn đã cài đặt bằng pip và chỉ giữ lại các thư viện mặc định, bạn có thể sử dụng một môi trường ảo (virtual environment). Dưới đây là các bước bạn có thể thực hiện:

Tạo một môi trường ảo mới. Đầu tiên, chọn một thư mục, sau đó mở terminal và nhập lệnh sau1:
python3 -m venv tutorial-env

Kích hoạt môi trường ảo. Trên Windows, bạn có thể sử dụng lệnh sau1:
tutorial-env\\Scripts\\activate.bat
---------------------------------------
file settings.py: thêm các module của app
AltEnter - Hiển thị hành động theo ngữ cảnh
Ctrl E - Xem các tập tin gần đây
Alt F7 - Tìm cách sử dụng. Hiển thị tất cả các vị trí sử dụng thành phần mã trong dự án của bạn



----------------------------------
django-admin startproject webDjango - tạo dự án
cd webDjango - chuyển thư mục làm việc
python manage.py startapp home - tạo 1 app tên home

python manage.py makemigrations - tạo/thêm/sửa db từ class entity
python manage.py migrate - tạo database, update
python manage.py createsuperuser - tạo user để đăng nhập
gõ user là anhgdt, email là lea81807@gmail.com, password: Song3goc
python manage.py runserver 9999 - chạy server
click ip -> http://127.0.0.1:9999/admin
enter: ctrl + break - thoát server

pip install pymysql -> create database trong mysql
pip install pillow
pip install django==4.0.1
pip install pymongo==3.12.3
py manage.py shell - test app -  exit()
pip install pytz
pip install babel
pip install djongo==1.3.6
pip install mysqlclient
pip install cryptography
pip install djangorestframework
pip install request
pip install fuzzywuzzy
pip install python-Levenshtein

python manage.py makemigrations
python manage.py migrate
python manage.py migrate --database=mongodb
python manage.py createsuperuser
python manage.py runserver 9999 


Thêm nhiều bản ghi

>>> Member.objects.all().values()
<QuerySet [{'id': 1, 'firstname': 'Emil', 'lastname': 'Refsnes'},
{'id': 2, 'firstname': 'Tobias', 'lastname': 'Refsnes'},
{'id': 3, 'firstname': 'Linus', 'lastname': 'Refsnes'},
{'id': 4, 'firstname': 'Lene', 'lastname': 'Refsnes'},
{'id': 5, 'firstname': 'Stale', 'lastname': 'Refsnes'},
{'id': 6, 'firstname': 'Jane', 'lastname': 'Doe'}]>

Xóa bản ghi
from members.models import Member
x = Member.objects.all()[5]
x.delete()

-------------------------------
>>> Customer.objects.all()
<QuerySet [<Customer: leanh>, <Customer: AnhGDT>, <Customer: super>]>
>>> Customer.objects.all().values()
<QuerySet [{'id': 1, 'user_id': 3, 'name': 'leanh', 'email': 'anh@gmail.com'}, {'id': 2, 'user_id': 1, 'name': 'AnhGDT', 'email': 'lea818071@gmail.com'}, {'id': 3, 'user
_id': 2, 'name': 'super', 'email': 'super@gmail.com'}]>

link query: https://docs.djangoproject.com/en/5.0/topics/db/queries/
manytomanyfield
>>> from blog.models import Author
>>> joe = Author.objects.create(name="Joe")
>>> entry.authors.add(joe)
